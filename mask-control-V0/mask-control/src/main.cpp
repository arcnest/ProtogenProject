#include <Arduino.h>

// // put function declarations here:
// int myFunction(int, int);

// void setup()
// {
//   // put your setup code here, to run once:
//   int result = myFunction(2, 3);
// }

// void loop()
// {
//   // put your main code here, to run repeatedly:
// }

// // put function definitions here:
// int myFunction(int x, int y)
// {
//   return x + y;
// }

#include "LedController.hpp"

#define DIN 27
#define CS 26
#define CLK 25

#define Segments 4

#define delayTime 1000 // Delay between Frames

LedController lc = LedController();

ByteBlock rocket = {
    B00000000,
    B00001111,
    B00111110,
    B11111101,
    B00111110,
    B00001111,
    B00000000,
    B00000000};

ByteBlock rocketColumns;

ByteBlock digits[10] = {
    {B00000000,
     B00011000,
     B00100100,
     B01000010,
     B01000010,
     B00100100,
     B00011000,
     B00000000},
    {B00000000,
     B00011100,
     B00101100,
     B01001100,
     B00001100,
     B00001100,
     B00001100,
     B00000000},
    {B00000000,
     B00111000,
     B01101100,
     B00011000,
     B00110000,
     B01100000,
     B01111110,
     B00000000},
    {B00000000,
     B00111100,
     B01100110,
     B00001100,
     B00000110,
     B01100110,
     B00111100,
     B00000000},
    {B00000000,
     B01100000,
     B01100000,
     B01101000,
     B01111110,
     B00001000,
     B00001000,
     B00000000},
    {B00000000,
     B01111110,
     B01100000,
     B01111000,
     B00000110,
     B01100110,
     B00111100,
     B00000000},
    {B00000000,
     B00001100,
     B00111000,
     B01100000,
     B01111100,
     B01100110,
     B00111100,
     B00000000},
    {B00000000,
     B01111110,
     B00000110,
     B00001100,
     B00011000,
     B00110000,
     B01100000,
     B00000000},
    {B00000000,
     B00111100,
     B00100100,
     B00011000,
     B01100110,
     B01000010,
     B00111100,
     B00000000},
    {B00000000,
     B00111100,
     B01100110,
     B00111110,
     B00000110,
     B00011100,
     B00110000,
     B00000000}};

bool emptySegment[8][8] = {

    // Segment 0
    {0, 0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0, 0},

};

bool eyesDefault[2][8][8] = {

    // Segment 0
    {
        {0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0},
        {1, 1, 1, 0, 0, 0, 0, 0},
        {1, 1, 1, 1, 1, 0, 0, 0},
        {0, 0, 0, 1, 1, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0},
    },
    // Segment 1
    {
        {0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0},
        {1, 1, 1, 1, 1, 0, 0, 0},
        {1, 1, 1, 1, 1, 1, 1, 1},
        {1, 1, 0, 0, 0, 1, 1, 1},
        {0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0},
    }};

// TODO invert/arange segments new
bool mouth[4][8][8] = {

    // Segment 0
    {
        {0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0},
        {1, 1, 1, 0, 0, 0, 0, 0},
        {0, 0, 0, 1, 1, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0},
    },
    // Segment 1
    {
        {0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 1, 1, 1, 0, 0, 0},
        {1, 1, 0, 0, 0, 1, 1, 1},
        {0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0},
    },
    // Segment 2
    {
        {0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 1, 0, 0, 0, 0},
        {0, 0, 1, 1, 1, 0, 0, 0},
        {1, 1, 1, 0, 1, 1, 0, 0},
        {1, 1, 0, 0, 0, 1, 1, 1},
        {0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0},
    },
    // Segment 3
    {
        {1, 1, 1, 0, 0, 0, 0, 0},
        {1, 1, 1, 0, 0, 0, 0, 0},
        {1, 1, 1, 1, 1, 0, 0, 0},
        {0, 0, 1, 1, 1, 1, 1, 0},
        {0, 0, 0, 1, 1, 1, 1, 1},
        {0, 0, 0, 0, 0, 0, 1, 1},
        {0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0},
    }};

bool mouthOpen[4][8][8] = {

    // Segment 0
    {
        {0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0},
        {1, 1, 1, 0, 0, 0, 0, 0},
        {1, 1, 1, 1, 1, 0, 0, 0},
        {0, 0, 0, 1, 1, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0},
    },
    // Segment 1
    {
        {0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0},
        {1, 1, 1, 1, 1, 0, 0, 0},
        {1, 1, 1, 1, 1, 1, 1, 1},
        {1, 1, 0, 0, 0, 1, 1, 1},
        {0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0},
    },
    // Segment 2
    {
        {0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 1, 0, 0, 0, 0},
        {1, 1, 1, 1, 1, 0, 0, 0},
        {1, 1, 1, 1, 1, 1, 1, 1},
        {1, 1, 1, 1, 1, 1, 1, 1},
        {1, 1, 0, 0, 0, 1, 1, 1},
        {0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0},
    },
    // Segment 3
    {
        {1, 1, 1, 1, 1, 1, 0, 0},
        {1, 1, 1, 1, 1, 1, 1, 0},
        {1, 1, 1, 1, 1, 1, 1, 1},
        {1, 1, 1, 1, 1, 1, 1, 1},
        {0, 0, 0, 1, 1, 1, 1, 1},
        {0, 0, 0, 0, 0, 1, 1, 1},
        {0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0},
    }};

bool *layoutMatrix[12];

void setup()
{

  lc.init(DIN, CLK, CS, Segments); // Pins: DIN,CLK,CS, # of Display connected
  lc.setIntensity(3);
  lc.clearMatrix();

  // Setup Layout

  layoutMatrix[0] = &eyesDefault[0][0][0];
  layoutMatrix[1] = &eyesDefault[1][0][0];
  layoutMatrix[2] = &mouth[0][0][0];
  layoutMatrix[3] = &mouth[1][0][0];
  layoutMatrix[4] = &mouth[2][0][0];
  layoutMatrix[5] = &mouth[3][0][0];
  layoutMatrix[6] = &eyesDefault[0][0][0];
  layoutMatrix[7] = &eyesDefault[1][0][0];
  layoutMatrix[8] = &mouth[0][0][0];
  layoutMatrix[9] = &mouth[1][0][0];
  layoutMatrix[10] = &mouth[2][0][0];
  layoutMatrix[11] = &mouth[3][0][0];

  // for (int i = 0; i < 12; i++)// Segments
  // {

  // }
}

void loop()
{
  // lc.activateAllSegments();
  // delay(delayTime);

  for (int i = 0; i < 12; i++)
  {
    for (int j = 0; j < 8; j++)
    {
      for (int k = 0; k < 8; k++)
      {
        lc.setLed(i, j, k, layoutMatrix[i][j][k]);
      }
    }
  }

  delay(delayTime);
}